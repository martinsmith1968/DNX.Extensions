//==============================================================================
// This source file was generated by a script - do not edit manually
//==============================================================================

using DNX.Extensions.Converters.BuiltInTypes;
using DNX.Extensions.Exceptions;
using DNX.Extensions.Tests.Conversion.BuiltInTypes.TestsDataSource;
using Shouldly;
using Xunit;

namespace DNX.Extensions.Tests.Conversion.BuiltInTypes;

public class ConversionDecimalExtensionsTests
{
    [Theory]
    [MemberData(nameof(ConversionDecimalExtensionsTestsDataSource.IsDecimal), MemberType = typeof(ConversionDecimalExtensionsTestsDataSource))]
    public void Test_IsDecimal(string text, bool expectedResult)
    {
        var result = text.IsDecimal();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionDecimalExtensionsTestsDataSource.ToDecimal), MemberType = typeof(ConversionDecimalExtensionsTestsDataSource))]
    public void Test_ToDecimal(string text, decimal expectedResult)
    {
        var result = text.ToDecimal();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionDecimalExtensionsTestsDataSource.ToDecimalThrows), MemberType = typeof(ConversionDecimalExtensionsTestsDataSource))]
    public void Test_ToDecimal_Throws(string text, bool expectedResult)
    {
        try
        {
            text.ToDecimal();

            expectedResult.ShouldBeTrue();
        }
        catch (ConversionException ex)
        {
            ex.Value.ShouldBe(text);

            expectedResult.ShouldBeFalse();
        }
    }

    [Theory]
    [MemberData(nameof(ConversionDecimalExtensionsTestsDataSource.ToDecimalWithDefault), MemberType = typeof(ConversionDecimalExtensionsTestsDataSource))]
    public void Test_ToDecimal_with_default(string text, decimal defaultValue, decimal expectedResult)
    {
        var result = text.ToDecimal(defaultValue);

        result.ShouldBe(expectedResult);
    }
}

