//==============================================================================
// This source file was generated by a script - do not edit manually
//==============================================================================

using DNX.Extensions.Converters.BuiltInTypes;
using DNX.Extensions.Exceptions;
using DNX.Extensions.Tests.Conversion.BuiltInTypes.TestsDataSource;
using Shouldly;
using Xunit;

namespace DNX.Extensions.Tests.Conversion.BuiltInTypes;

public class Conversion#name#ExtensionsTests
{
    [Theory]
    [MemberData(nameof(Conversion#name#ExtensionsTestsDataSource.Is#name#), MemberType = typeof(Conversion#name#ExtensionsTestsDataSource))]
    public void Test_Is#name#(string text, bool expectedResult)
    {
        var result = text.Is#name#();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(Conversion#name#ExtensionsTestsDataSource.To#name#), MemberType = typeof(Conversion#name#ExtensionsTestsDataSource))]
    public void Test_To#name#(string text, #type# expectedResult)
    {
        var result = text.To#name#();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(Conversion#name#ExtensionsTestsDataSource.To#name#Throws), MemberType = typeof(Conversion#name#ExtensionsTestsDataSource))]
    public void Test_To#name#_Throws(string text, bool expectedResult)
    {
        try
        {
            text.To#name#();

            expectedResult.ShouldBeTrue();
        }
        catch (ConversionException ex)
        {
            ex.Value.ShouldBe(text);

            expectedResult.ShouldBeFalse();
        }
    }

    [Theory]
    [MemberData(nameof(Conversion#name#ExtensionsTestsDataSource.To#name#WithDefault), MemberType = typeof(Conversion#name#ExtensionsTestsDataSource))]
    public void Test_To#name#_with_default(string text, #type# defaultValue, #type# expectedResult)
    {
        var result = text.To#name#(defaultValue);

        result.ShouldBe(expectedResult);
    }
}
