//==============================================================================
// This source file was generated by a script - do not edit manually
//==============================================================================

using DNX.Extensions.Converters.BuiltInTypes;
using DNX.Extensions.Exceptions;
using DNX.Extensions.Tests.Conversion.BuiltInTypes.TestsDataSource;
using Shouldly;
using Xunit;

namespace DNX.Extensions.Tests.Conversion.BuiltInTypes;

public class ConversionUInt16ExtensionsTests
{
    [Theory]
    [MemberData(nameof(ConversionUInt16ExtensionsTestsDataSource.IsUInt16), MemberType = typeof(ConversionUInt16ExtensionsTestsDataSource))]
    public void Test_IsUInt16(string text, bool expectedResult)
    {
        var result = text.IsUInt16();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionUInt16ExtensionsTestsDataSource.ToUInt16), MemberType = typeof(ConversionUInt16ExtensionsTestsDataSource))]
    public void Test_ToUInt16(string text, ushort expectedResult)
    {
        var result = text.ToUInt16();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionUInt16ExtensionsTestsDataSource.ToUInt16Throws), MemberType = typeof(ConversionUInt16ExtensionsTestsDataSource))]
    public void Test_ToUInt16_Throws(string text, bool expectedResult)
    {
        try
        {
            text.ToUInt16();

            expectedResult.ShouldBeTrue();
        }
        catch (ConversionException ex)
        {
            ex.Value.ShouldBe(text);

            expectedResult.ShouldBeFalse();
        }
    }

    [Theory]
    [MemberData(nameof(ConversionUInt16ExtensionsTestsDataSource.ToUInt16WithDefault), MemberType = typeof(ConversionUInt16ExtensionsTestsDataSource))]
    public void Test_ToUInt16_with_default(string text, ushort defaultValue, ushort expectedResult)
    {
        var result = text.ToUInt16(defaultValue);

        result.ShouldBe(expectedResult);
    }
}

