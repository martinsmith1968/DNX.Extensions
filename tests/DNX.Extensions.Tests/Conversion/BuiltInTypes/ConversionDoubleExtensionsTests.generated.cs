//==============================================================================
// This source file was generated by a script - do not edit manually
//==============================================================================

using DNX.Extensions.Converters.BuiltInTypes;
using DNX.Extensions.Exceptions;
using DNX.Extensions.Tests.Conversion.BuiltInTypes.TestsDataSource;
using Shouldly;
using Xunit;

namespace DNX.Extensions.Tests.Conversion.BuiltInTypes;

public class ConversionDoubleExtensionsTests
{
    [Theory]
    [MemberData(nameof(ConversionDoubleExtensionsTestsDataSource.IsDouble), MemberType = typeof(ConversionDoubleExtensionsTestsDataSource))]
    public void Test_IsDouble(string text, bool expectedResult)
    {
        var result = text.IsDouble();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionDoubleExtensionsTestsDataSource.ToDouble), MemberType = typeof(ConversionDoubleExtensionsTestsDataSource))]
    public void Test_ToDouble(string text, double expectedResult)
    {
        var result = text.ToDouble();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionDoubleExtensionsTestsDataSource.ToDoubleThrows), MemberType = typeof(ConversionDoubleExtensionsTestsDataSource))]
    public void Test_ToDouble_Throws(string text, bool expectedResult)
    {
        try
        {
            text.ToDouble();

            expectedResult.ShouldBeTrue();
        }
        catch (ConversionException ex)
        {
            ex.Value.ShouldBe(text);

            expectedResult.ShouldBeFalse();
        }
    }

    [Theory]
    [MemberData(nameof(ConversionDoubleExtensionsTestsDataSource.ToDoubleWithDefault), MemberType = typeof(ConversionDoubleExtensionsTestsDataSource))]
    public void Test_ToDouble_with_default(string text, double defaultValue, double expectedResult)
    {
        var result = text.ToDouble(defaultValue);

        result.ShouldBe(expectedResult);
    }
}

