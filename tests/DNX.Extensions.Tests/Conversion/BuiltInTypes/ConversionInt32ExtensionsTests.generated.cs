//==============================================================================
// This source file was generated by a script - do not edit manually
//==============================================================================

using DNX.Extensions.Converters.BuiltInTypes;
using DNX.Extensions.Exceptions;
using DNX.Extensions.Tests.Conversion.BuiltInTypes.TestsDataSource;
using Shouldly;
using Xunit;

namespace DNX.Extensions.Tests.Conversion.BuiltInTypes;

public class ConversionInt32ExtensionsTests
{
    [Theory]
    [MemberData(nameof(ConversionInt32ExtensionsTestsDataSource.IsInt32), MemberType = typeof(ConversionInt32ExtensionsTestsDataSource))]
    public void Test_IsInt32(string text, bool expectedResult)
    {
        var result = text.IsInt32();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionInt32ExtensionsTestsDataSource.ToInt32), MemberType = typeof(ConversionInt32ExtensionsTestsDataSource))]
    public void Test_ToInt32(string text, int expectedResult)
    {
        var result = text.ToInt32();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionInt32ExtensionsTestsDataSource.ToInt32Throws), MemberType = typeof(ConversionInt32ExtensionsTestsDataSource))]
    public void Test_ToInt32_Throws(string text, bool expectedResult)
    {
        try
        {
            text.ToInt32();

            expectedResult.ShouldBeTrue();
        }
        catch (ConversionException ex)
        {
            ex.Value.ShouldBe(text);

            expectedResult.ShouldBeFalse();
        }
    }

    [Theory]
    [MemberData(nameof(ConversionInt32ExtensionsTestsDataSource.ToInt32WithDefault), MemberType = typeof(ConversionInt32ExtensionsTestsDataSource))]
    public void Test_ToInt32_with_default(string text, int defaultValue, int expectedResult)
    {
        var result = text.ToInt32(defaultValue);

        result.ShouldBe(expectedResult);
    }
}

