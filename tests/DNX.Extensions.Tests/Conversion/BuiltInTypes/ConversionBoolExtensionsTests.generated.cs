//==============================================================================
// This source file was generated by a script - do not edit manually
//==============================================================================

using DNX.Extensions.Converters.BuiltInTypes;
using DNX.Extensions.Exceptions;
using DNX.Extensions.Tests.Conversion.BuiltInTypes.TestsDataSource;
using Shouldly;
using Xunit;

namespace DNX.Extensions.Tests.Conversion.BuiltInTypes;

public class ConversionBoolExtensionsTests
{
    [Theory]
    [MemberData(nameof(ConversionBoolExtensionsTestsDataSource.IsBool), MemberType = typeof(ConversionBoolExtensionsTestsDataSource))]
    public void Test_IsBool(string text, bool expectedResult)
    {
        var result = text.IsBool();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionBoolExtensionsTestsDataSource.ToBool), MemberType = typeof(ConversionBoolExtensionsTestsDataSource))]
    public void Test_ToBool(string text, bool expectedResult)
    {
        var result = text.ToBool();

        result.ShouldBe(expectedResult);
    }

    [Theory]
    [MemberData(nameof(ConversionBoolExtensionsTestsDataSource.ToBoolThrows), MemberType = typeof(ConversionBoolExtensionsTestsDataSource))]
    public void Test_ToBool_Throws(string text, bool expectedResult)
    {
        try
        {
            text.ToBool();

            expectedResult.ShouldBeTrue();
        }
        catch (ConversionException ex)
        {
            ex.Value.ShouldBe(text);

            expectedResult.ShouldBeFalse();
        }
    }

    [Theory]
    [MemberData(nameof(ConversionBoolExtensionsTestsDataSource.ToBoolWithDefault), MemberType = typeof(ConversionBoolExtensionsTestsDataSource))]
    public void Test_ToBool_with_default(string text, bool defaultValue, bool expectedResult)
    {
        var result = text.ToBool(defaultValue);

        result.ShouldBe(expectedResult);
    }
}

